/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package TestPlugin;

import org.mochizuki.bot.event.Event;
import org.mochizuki.bot.event.EventType;
import org.mochizuki.bot.service.Annotation.ConfigDir;
import org.mochizuki.bot.service.Annotation.Inject;
import org.mochizuki.bot.service.Annotation.Listener;
import org.mochizuki.bot.service.Annotation.Plugin;
import org.mochizuki.bot.service.CommandManager;
import org.mochizuki.bot.service.ConversationManager;
import org.mochizuki.bot.service.ServiceInterface;

import java.nio.file.Path;
import java.util.logging.Logger;

@Plugin(id = "ProjectL2",
        name = "ProjectL2",
        version = "alpha1.0",
        authors = "mochizuki")
public class ProjectL2 {
    @Inject
    private ConversationManager conversationManager;

    @Inject
    private Logger logger;

    @Inject
    private ServiceInterface serviceInterface;

    @Inject
    @ConfigDir(sharedRoot = true)
    private Path path;

    @Listener(eventType = EventType.BotPostInitializationEvent)
    public void onPostInitializationEvent(Event event){
        conversationManager.singleModeRegister(this, new SingleMessage(serviceInterface));

        try {
            CommandManager commandManager = CommandManager.getCommandManager();
            commandManager.addCommand(this.getClass().getDeclaredMethod("changeToSingleMode"),this);
        } catch (NoSuchMethodException e) {
            e.printStackTrace();
        }
    }

    @Listener(eventType = EventType.BotInitializationEvent)
    public void onInitializationEvent(Event event){
        CommandManager commandManager = CommandManager.getCommandManager();
        try {
            commandManager.addCommand(this.getClass().getDeclaredMethod("ProjectL2_save"),this);
        } catch (NoSuchMethodException e) {
            e.printStackTrace();
        }
    }

    private void changeToSingleMode(){
        conversationManager.changeSingleMode("GoInSingleMode");
    }

    private void ProjectL2_save(){
        serviceInterface.displayMessage(logger,"save...");
    }
}
